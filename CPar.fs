// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

// let fst  (a, _, _) = a
// let snd (_, b, _) = b
// let thd  (_, _, c) = c
let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c


# 30 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUES
  | COLON
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SELFINC
  | SELFDEC
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | BREAK
  | CASE
  | CHAR
  | CONTINUE
  | DEFAULT
  | DO
  | ELSE
  | FOR
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | PRINTF
  | RETURN
  | STRING
  | SWITCH
  | VOID
  | WHILE
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUES
    | TOKEN_COLON
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_BREAK
    | TOKEN_CASE
    | TOKEN_CHAR
    | TOKEN_CONTINUE
    | TOKEN_DEFAULT
    | TOKEN_DO
    | TOKEN_ELSE
    | TOKEN_FOR
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_PRINTF
    | TOKEN_RETURN
    | TOKEN_STRING
    | TOKEN_SWITCH
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_CaseStmt
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_PrintfExpr
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstChar
    | NONTERM_ConstString
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUES  -> 11 
  | COLON  -> 12 
  | PLUSASSIGN  -> 13 
  | MINUSASSIGN  -> 14 
  | TIMESASSIGN  -> 15 
  | DIVASSIGN  -> 16 
  | MODASSIGN  -> 17 
  | NOT  -> 18 
  | SEQOR  -> 19 
  | SEQAND  -> 20 
  | EQ  -> 21 
  | NE  -> 22 
  | GT  -> 23 
  | LT  -> 24 
  | GE  -> 25 
  | LE  -> 26 
  | SELFINC  -> 27 
  | SELFDEC  -> 28 
  | PLUS  -> 29 
  | MINUS  -> 30 
  | TIMES  -> 31 
  | DIV  -> 32 
  | MOD  -> 33 
  | BREAK  -> 34 
  | CASE  -> 35 
  | CHAR  -> 36 
  | CONTINUE  -> 37 
  | DEFAULT  -> 38 
  | DO  -> 39 
  | ELSE  -> 40 
  | FOR  -> 41 
  | IF  -> 42 
  | INT  -> 43 
  | NULL  -> 44 
  | PRINT  -> 45 
  | PRINTLN  -> 46 
  | PRINTF  -> 47 
  | RETURN  -> 48 
  | STRING  -> 49 
  | SWITCH  -> 50 
  | VOID  -> 51 
  | WHILE  -> 52 
  | CSTCHAR _ -> 53 
  | CSTSTRING _ -> 54 
  | NAME _ -> 55 
  | CSTINT _ -> 56 
  | CSTBOOL _ -> 57 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUES 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_PLUSASSIGN 
  | 14 -> TOKEN_MINUSASSIGN 
  | 15 -> TOKEN_TIMESASSIGN 
  | 16 -> TOKEN_DIVASSIGN 
  | 17 -> TOKEN_MODASSIGN 
  | 18 -> TOKEN_NOT 
  | 19 -> TOKEN_SEQOR 
  | 20 -> TOKEN_SEQAND 
  | 21 -> TOKEN_EQ 
  | 22 -> TOKEN_NE 
  | 23 -> TOKEN_GT 
  | 24 -> TOKEN_LT 
  | 25 -> TOKEN_GE 
  | 26 -> TOKEN_LE 
  | 27 -> TOKEN_SELFINC 
  | 28 -> TOKEN_SELFDEC 
  | 29 -> TOKEN_PLUS 
  | 30 -> TOKEN_MINUS 
  | 31 -> TOKEN_TIMES 
  | 32 -> TOKEN_DIV 
  | 33 -> TOKEN_MOD 
  | 34 -> TOKEN_BREAK 
  | 35 -> TOKEN_CASE 
  | 36 -> TOKEN_CHAR 
  | 37 -> TOKEN_CONTINUE 
  | 38 -> TOKEN_DEFAULT 
  | 39 -> TOKEN_DO 
  | 40 -> TOKEN_ELSE 
  | 41 -> TOKEN_FOR 
  | 42 -> TOKEN_IF 
  | 43 -> TOKEN_INT 
  | 44 -> TOKEN_NULL 
  | 45 -> TOKEN_PRINT 
  | 46 -> TOKEN_PRINTLN 
  | 47 -> TOKEN_PRINTF 
  | 48 -> TOKEN_RETURN 
  | 49 -> TOKEN_STRING 
  | 50 -> TOKEN_SWITCH 
  | 51 -> TOKEN_VOID 
  | 52 -> TOKEN_WHILE 
  | 53 -> TOKEN_CSTCHAR 
  | 54 -> TOKEN_CSTSTRING 
  | 55 -> TOKEN_NAME 
  | 56 -> TOKEN_CSTINT 
  | 57 -> TOKEN_CSTBOOL 
  | 60 -> TOKEN_end_of_input
  | 58 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_CaseStmt 
    | 42 -> NONTERM_CaseStmt 
    | 43 -> NONTERM_CaseStmt 
    | 44 -> NONTERM_Expr 
    | 45 -> NONTERM_Expr 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_ExprNotAccess 
    | 76 -> NONTERM_PrintfExpr 
    | 77 -> NONTERM_PrintfExpr 
    | 78 -> NONTERM_PrintfExpr 
    | 79 -> NONTERM_AtExprNotAccess 
    | 80 -> NONTERM_AtExprNotAccess 
    | 81 -> NONTERM_AtExprNotAccess 
    | 82 -> NONTERM_AtExprNotAccess 
    | 83 -> NONTERM_AtExprNotAccess 
    | 84 -> NONTERM_Access 
    | 85 -> NONTERM_Access 
    | 86 -> NONTERM_Access 
    | 87 -> NONTERM_Access 
    | 88 -> NONTERM_Access 
    | 89 -> NONTERM_Exprs 
    | 90 -> NONTERM_Exprs 
    | 91 -> NONTERM_Exprs1 
    | 92 -> NONTERM_Exprs1 
    | 93 -> NONTERM_Const 
    | 94 -> NONTERM_Const 
    | 95 -> NONTERM_Const 
    | 96 -> NONTERM_Const 
    | 97 -> NONTERM_ConstChar 
    | 98 -> NONTERM_ConstString 
    | 99 -> NONTERM_Type 
    | 100 -> NONTERM_Type 
    | 101 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 60 
let _fsyacc_tagOfErrorTerminal = 58

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUES  -> "QUES" 
  | COLON  -> "COLON" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | BREAK  -> "BREAK" 
  | CASE  -> "CASE" 
  | CHAR  -> "CHAR" 
  | CONTINUE  -> "CONTINUE" 
  | DEFAULT  -> "DEFAULT" 
  | DO  -> "DO" 
  | ELSE  -> "ELSE" 
  | FOR  -> "FOR" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | PRINTF  -> "PRINTF" 
  | RETURN  -> "RETURN" 
  | STRING  -> "STRING" 
  | SWITCH  -> "SWITCH" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUES  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | PRINTF  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 8us; 4us; 8us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 10us; 4us; 10us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 16us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 89us; 63us; 90us; 63us; 99us; 63us; 101us; 63us; 117us; 63us; 120us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 113us; 14us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 89us; 91us; 90us; 91us; 99us; 100us; 101us; 102us; 117us; 118us; 120us; 121us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 112us; 90us; 114us; 2us; 65535us; 80us; 81us; 118us; 122us; 54us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 77us; 78us; 85us; 88us; 86us; 87us; 89us; 57us; 90us; 57us; 93us; 94us; 95us; 96us; 97us; 98us; 99us; 57us; 101us; 57us; 104us; 105us; 117us; 57us; 120us; 57us; 134us; 135us; 136us; 137us; 138us; 139us; 140us; 141us; 142us; 143us; 144us; 145us; 147us; 178us; 150us; 151us; 152us; 153us; 179us; 160us; 180us; 161us; 181us; 162us; 182us; 163us; 183us; 164us; 184us; 165us; 185us; 166us; 186us; 167us; 187us; 168us; 188us; 169us; 189us; 170us; 190us; 171us; 191us; 172us; 192us; 173us; 193us; 175us; 194us; 176us; 199us; 174us; 200us; 174us; 211us; 177us; 214us; 178us; 54us; 65535us; 16us; 125us; 43us; 125us; 46us; 125us; 49us; 125us; 52us; 125us; 59us; 125us; 66us; 125us; 67us; 125us; 70us; 125us; 71us; 125us; 73us; 125us; 74us; 125us; 77us; 125us; 85us; 125us; 86us; 125us; 89us; 125us; 90us; 125us; 93us; 125us; 95us; 125us; 97us; 125us; 99us; 125us; 101us; 125us; 104us; 125us; 117us; 125us; 120us; 125us; 134us; 125us; 136us; 125us; 138us; 125us; 140us; 125us; 142us; 125us; 144us; 125us; 147us; 125us; 150us; 125us; 152us; 125us; 179us; 125us; 180us; 125us; 181us; 125us; 182us; 125us; 183us; 125us; 184us; 125us; 185us; 125us; 186us; 125us; 187us; 125us; 188us; 125us; 189us; 125us; 190us; 125us; 191us; 125us; 192us; 125us; 193us; 125us; 194us; 125us; 199us; 126us; 200us; 126us; 211us; 125us; 214us; 125us; 2us; 65535us; 157us; 158us; 176us; 195us; 56us; 65535us; 16us; 127us; 43us; 127us; 46us; 127us; 49us; 127us; 52us; 127us; 59us; 127us; 66us; 127us; 67us; 127us; 70us; 127us; 71us; 127us; 73us; 127us; 74us; 127us; 77us; 127us; 85us; 127us; 86us; 127us; 89us; 127us; 90us; 127us; 93us; 127us; 95us; 127us; 97us; 127us; 99us; 127us; 101us; 127us; 104us; 127us; 115us; 116us; 117us; 127us; 120us; 127us; 134us; 127us; 136us; 127us; 138us; 127us; 140us; 127us; 142us; 127us; 144us; 127us; 147us; 127us; 150us; 127us; 152us; 127us; 179us; 127us; 180us; 127us; 181us; 127us; 182us; 127us; 183us; 127us; 184us; 127us; 185us; 127us; 186us; 127us; 187us; 127us; 188us; 127us; 189us; 127us; 190us; 127us; 191us; 127us; 192us; 127us; 193us; 127us; 194us; 127us; 199us; 127us; 200us; 127us; 208us; 210us; 211us; 127us; 214us; 127us; 59us; 65535us; 16us; 124us; 43us; 124us; 46us; 124us; 49us; 124us; 52us; 124us; 59us; 124us; 66us; 124us; 67us; 124us; 70us; 124us; 71us; 124us; 73us; 124us; 74us; 124us; 77us; 124us; 85us; 124us; 86us; 124us; 89us; 124us; 90us; 124us; 93us; 124us; 95us; 124us; 97us; 124us; 99us; 124us; 101us; 124us; 104us; 124us; 117us; 124us; 120us; 124us; 128us; 129us; 130us; 131us; 134us; 124us; 136us; 124us; 138us; 124us; 140us; 124us; 142us; 124us; 144us; 124us; 147us; 124us; 150us; 124us; 152us; 124us; 179us; 124us; 180us; 124us; 181us; 124us; 182us; 124us; 183us; 124us; 184us; 124us; 185us; 124us; 186us; 124us; 187us; 124us; 188us; 124us; 189us; 124us; 190us; 124us; 191us; 124us; 192us; 124us; 193us; 124us; 194us; 124us; 199us; 124us; 200us; 123us; 202us; 203us; 205us; 206us; 208us; 209us; 211us; 124us; 214us; 124us; 1us; 65535us; 147us; 148us; 2us; 65535us; 147us; 213us; 214us; 215us; 56us; 65535us; 16us; 196us; 43us; 196us; 46us; 196us; 49us; 196us; 52us; 196us; 59us; 196us; 66us; 196us; 67us; 196us; 70us; 196us; 71us; 196us; 73us; 196us; 74us; 196us; 77us; 196us; 85us; 196us; 86us; 196us; 89us; 196us; 90us; 196us; 93us; 196us; 95us; 196us; 97us; 196us; 99us; 196us; 101us; 196us; 104us; 196us; 115us; 196us; 117us; 196us; 120us; 196us; 134us; 196us; 136us; 196us; 138us; 196us; 140us; 196us; 142us; 196us; 144us; 196us; 147us; 196us; 150us; 196us; 152us; 196us; 179us; 196us; 180us; 196us; 181us; 196us; 182us; 196us; 183us; 196us; 184us; 196us; 185us; 196us; 186us; 196us; 187us; 196us; 188us; 196us; 189us; 196us; 190us; 196us; 191us; 196us; 192us; 196us; 193us; 196us; 194us; 196us; 199us; 196us; 200us; 196us; 208us; 196us; 211us; 196us; 214us; 196us; 56us; 65535us; 16us; 197us; 43us; 197us; 46us; 197us; 49us; 197us; 52us; 197us; 59us; 197us; 66us; 197us; 67us; 197us; 70us; 197us; 71us; 197us; 73us; 197us; 74us; 197us; 77us; 197us; 85us; 197us; 86us; 197us; 89us; 197us; 90us; 197us; 93us; 197us; 95us; 197us; 97us; 197us; 99us; 197us; 101us; 197us; 104us; 197us; 115us; 197us; 117us; 197us; 120us; 197us; 134us; 197us; 136us; 197us; 138us; 197us; 140us; 197us; 142us; 197us; 144us; 197us; 147us; 197us; 150us; 197us; 152us; 197us; 179us; 197us; 180us; 197us; 181us; 197us; 182us; 197us; 183us; 197us; 184us; 197us; 185us; 197us; 186us; 197us; 187us; 197us; 188us; 197us; 189us; 197us; 190us; 197us; 191us; 197us; 192us; 197us; 193us; 197us; 194us; 197us; 199us; 197us; 200us; 197us; 208us; 197us; 211us; 197us; 214us; 197us; 56us; 65535us; 16us; 198us; 43us; 198us; 46us; 198us; 49us; 198us; 52us; 198us; 59us; 198us; 66us; 198us; 67us; 198us; 70us; 198us; 71us; 198us; 73us; 198us; 74us; 198us; 77us; 198us; 85us; 198us; 86us; 198us; 89us; 198us; 90us; 198us; 93us; 198us; 95us; 198us; 97us; 198us; 99us; 198us; 101us; 198us; 104us; 198us; 115us; 198us; 117us; 198us; 120us; 198us; 134us; 198us; 136us; 198us; 138us; 198us; 140us; 198us; 142us; 198us; 144us; 198us; 147us; 198us; 150us; 198us; 152us; 198us; 179us; 198us; 180us; 198us; 181us; 198us; 182us; 198us; 183us; 198us; 184us; 198us; 185us; 198us; 186us; 198us; 187us; 198us; 188us; 198us; 189us; 198us; 190us; 198us; 191us; 198us; 192us; 198us; 193us; 198us; 194us; 198us; 199us; 198us; 200us; 198us; 208us; 198us; 211us; 198us; 214us; 198us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 59us; 64us; 70us; 85us; 93us; 96us; 151us; 206us; 209us; 266us; 326us; 328us; 331us; 388us; 445us; 502us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 15us; 8us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 38us; 1us; 26us; 15us; 27us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 15us; 29us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 3us; 31us; 38us; 39us; 17us; 31us; 38us; 39us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 31us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 1us; 32us; 1us; 32us; 15us; 32us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 33us; 2us; 33us; 40us; 1us; 33us; 2us; 33us; 40us; 16us; 33us; 40us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 33us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 33us; 2us; 33us; 40us; 1us; 33us; 1us; 34us; 1us; 34us; 15us; 34us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 15us; 34us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 15us; 34us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 15us; 35us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 2us; 41us; 43us; 2us; 41us; 43us; 2us; 41us; 43us; 2us; 41us; 43us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 11us; 44us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 85us; 88us; 10us; 44us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 88us; 1us; 45us; 2us; 45us; 82us; 1us; 46us; 1us; 47us; 2us; 47us; 88us; 1us; 48us; 2us; 48us; 88us; 1us; 49us; 1us; 50us; 1us; 51us; 15us; 51us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 52us; 15us; 52us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 53us; 15us; 53us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 54us; 15us; 54us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 55us; 15us; 55us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 56us; 15us; 56us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 2us; 57us; 84us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 58us; 15us; 58us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 59us; 15us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 15us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 74us; 75us; 14us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 75us; 16us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 77us; 78us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 88us; 16us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 91us; 92us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 75us; 2us; 77us; 78us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 2us; 82us; 85us; 1us; 82us; 1us; 83us; 2us; 83us; 88us; 1us; 84us; 1us; 85us; 2us; 85us; 88us; 1us; 85us; 2us; 86us; 87us; 2us; 86us; 88us; 1us; 87us; 1us; 88us; 1us; 88us; 1us; 90us; 1us; 92us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 58us; 60us; 63us; 65us; 69us; 71us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 143us; 145us; 161us; 163us; 166us; 168us; 184us; 186us; 188us; 190us; 194us; 196us; 200us; 218us; 234us; 236us; 240us; 242us; 244us; 247us; 249us; 251us; 253us; 269us; 271us; 273us; 275us; 277us; 279us; 282us; 284us; 287us; 304us; 320us; 322us; 325us; 327us; 329us; 331us; 347us; 349us; 365us; 367us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 425us; 427us; 429us; 432us; 435us; 438us; 441us; 443us; 445us; 447us; 449us; 461us; 472us; 474us; 477us; 479us; 481us; 484us; 486us; 489us; 491us; 493us; 495us; 511us; 513us; 529us; 531us; 547us; 549us; 565us; 567us; 583us; 585us; 601us; 604us; 606us; 608us; 610us; 612us; 628us; 630us; 646us; 648us; 650us; 652us; 654us; 656us; 658us; 674us; 690us; 706us; 722us; 738us; 754us; 770us; 786us; 802us; 818us; 834us; 850us; 866us; 882us; 897us; 913us; 930us; 946us; 963us; 965us; 967us; 969us; 971us; 973us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1009us; 1011us; 1013us; 1016us; 1018us; 1020us; 1023us; 1025us; 1028us; 1031us; 1033us; 1035us; 1037us; 1039us; 1041us; 1043us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; |]
let _fsyacc_action_rows = 226
let _fsyacc_actionTableElements = [|4us; 16386us; 36us; 224us; 43us; 223us; 49us; 225us; 51us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 36us; 224us; 43us; 223us; 49us; 225us; 51us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 1us; 32768us; 7us; 9us; 0us; 16389us; 0us; 16390us; 3us; 32768us; 1us; 22us; 31us; 20us; 55us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 55us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 55us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 14us; 16392us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 31us; 20us; 55us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 31us; 20us; 55us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 56us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 55us; 30us; 1us; 32768us; 1us; 31us; 3us; 16400us; 36us; 224us; 43us; 223us; 49us; 225us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 3us; 16400us; 36us; 224us; 43us; 223us; 49us; 225us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 3us; 32768us; 36us; 224us; 43us; 223us; 49us; 225us; 0us; 16403us; 28us; 16405us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 36us; 224us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 65us; 43us; 223us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 49us; 225us; 50us; 76us; 52us; 84us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 1us; 32768us; 4us; 45us; 0us; 16404us; 28us; 16405us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 36us; 224us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 65us; 43us; 223us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 49us; 225us; 50us; 76us; 52us; 84us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16406us; 1us; 32768us; 7us; 49us; 28us; 16405us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 36us; 224us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 65us; 43us; 223us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 49us; 225us; 50us; 76us; 52us; 84us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16407us; 1us; 32768us; 7us; 52us; 28us; 16405us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 36us; 224us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 65us; 43us; 223us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 49us; 225us; 50us; 76us; 52us; 84us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 40us; 74us; 0us; 16410us; 15us; 32768us; 7us; 58us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 0us; 16411us; 17us; 32768us; 1us; 200us; 7us; 60us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16412us; 15us; 32768us; 7us; 62us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 15us; 32768us; 2us; 71us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 15us; 32768us; 2us; 70us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 64us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 83us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 65us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 84us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 1us; 32768us; 40us; 73us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 64us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 83us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 65us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 84us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16415us; 1us; 32768us; 1us; 77us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 15us; 32768us; 2us; 79us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 1us; 32768us; 3us; 80us; 2us; 32768us; 35us; 115us; 38us; 119us; 1us; 32768us; 4us; 82us; 0us; 16416us; 1us; 32768us; 1us; 85us; 1us; 32768us; 1us; 86us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 15us; 32768us; 2us; 90us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 15us; 32768us; 2us; 89us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 64us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 83us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 65us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 84us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16417us; 1us; 32768us; 1us; 93us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 15us; 32768us; 7us; 95us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 15us; 32768us; 7us; 97us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 15us; 32768us; 2us; 99us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 64us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 83us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16418us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 64us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 83us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 1us; 32768us; 52us; 103us; 1us; 32768us; 1us; 104us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 15us; 32768us; 2us; 106us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 1us; 32768us; 7us; 107us; 0us; 16419us; 1us; 32768us; 7us; 109us; 0us; 16420us; 1us; 32768us; 7us; 111us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 8us; 32768us; 1us; 199us; 10us; 202us; 30us; 218us; 44us; 220us; 53us; 221us; 54us; 222us; 56us; 216us; 57us; 217us; 1us; 32768us; 12us; 117us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 64us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 83us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 2us; 16425us; 35us; 115us; 38us; 119us; 1us; 32768us; 12us; 120us; 25us; 32768us; 1us; 200us; 3us; 43us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 34us; 108us; 37us; 110us; 39us; 101us; 41us; 92us; 42us; 64us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 48us; 59us; 50us; 76us; 52us; 83us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16426us; 0us; 16427us; 10us; 16428us; 2us; 207us; 5us; 211us; 9us; 134us; 13us; 136us; 14us; 138us; 15us; 140us; 16us; 142us; 17us; 144us; 27us; 132us; 28us; 133us; 9us; 16428us; 5us; 211us; 9us; 134us; 13us; 136us; 14us; 138us; 15us; 140us; 16us; 142us; 17us; 144us; 27us; 132us; 28us; 133us; 0us; 16429us; 1us; 16429us; 2us; 201us; 0us; 16430us; 3us; 32768us; 1us; 205us; 31us; 208us; 55us; 204us; 1us; 16431us; 5us; 211us; 3us; 32768us; 1us; 205us; 31us; 208us; 55us; 204us; 1us; 16432us; 5us; 211us; 0us; 16433us; 0us; 16434us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 14us; 16435us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 13us; 16436us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 13us; 16437us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 13us; 16438us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 13us; 16439us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 13us; 16440us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 1us; 16468us; 1us; 147us; 16us; 16473us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 1us; 32768us; 2us; 149us; 0us; 16441us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16442us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 14us; 16443us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 0us; 16444us; 1us; 32768us; 1us; 156us; 1us; 32768us; 54us; 157us; 1us; 16460us; 8us; 194us; 1us; 32768us; 2us; 159us; 0us; 16445us; 3us; 16446us; 31us; 181us; 32us; 182us; 33us; 183us; 3us; 16447us; 31us; 181us; 32us; 182us; 33us; 183us; 0us; 16448us; 0us; 16449us; 0us; 16450us; 9us; 16451us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 9us; 16452us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 9us; 16453us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 9us; 16454us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 9us; 16455us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 9us; 16456us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 15us; 32768us; 11us; 190us; 12us; 191us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 14us; 16457us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 11us; 16458us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 14us; 32768us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 12us; 16459us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 15us; 16460us; 8us; 194us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 15us; 32768us; 6us; 212us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 15us; 16475us; 8us; 214us; 11us; 190us; 19us; 193us; 20us; 192us; 21us; 184us; 22us; 185us; 23us; 186us; 24us; 187us; 25us; 188us; 26us; 189us; 29us; 179us; 30us; 180us; 31us; 181us; 32us; 182us; 33us; 183us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16466us; 3us; 32768us; 1us; 205us; 31us; 208us; 55us; 204us; 1us; 16467us; 5us; 211us; 0us; 16468us; 3us; 32768us; 1us; 205us; 31us; 208us; 55us; 204us; 2us; 32768us; 2us; 207us; 5us; 211us; 0us; 16469us; 10us; 32768us; 1us; 200us; 10us; 202us; 30us; 218us; 31us; 208us; 44us; 220us; 53us; 221us; 54us; 222us; 55us; 204us; 56us; 216us; 57us; 217us; 1us; 16470us; 5us; 211us; 0us; 16471us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16472us; 0us; 16474us; 16us; 32768us; 1us; 200us; 10us; 202us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 218us; 31us; 208us; 44us; 220us; 45us; 152us; 46us; 154us; 47us; 155us; 53us; 221us; 54us; 222us; 55us; 146us; 56us; 216us; 57us; 217us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 1us; 32768us; 56us; 219us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 20us; 21us; 22us; 26us; 30us; 34us; 37us; 39us; 56us; 71us; 72us; 74us; 78us; 80us; 84us; 87us; 88us; 91us; 92us; 94us; 95us; 97us; 99us; 103us; 105us; 107us; 108us; 112us; 114us; 116us; 117us; 118us; 120us; 124us; 125us; 154us; 156us; 157us; 186us; 187us; 189us; 218us; 219us; 221us; 250us; 251us; 252us; 254us; 255us; 271us; 272us; 290us; 291us; 307us; 308us; 309us; 311us; 313us; 330us; 347us; 363us; 379us; 405us; 431us; 433us; 459us; 485us; 486us; 488us; 505us; 521us; 523us; 526us; 528us; 529us; 531us; 533us; 550us; 567us; 583us; 599us; 625us; 651us; 652us; 654us; 671us; 687us; 704us; 720us; 737us; 753us; 779us; 780us; 806us; 808us; 810us; 827us; 843us; 845us; 846us; 848us; 849us; 851us; 852us; 853us; 854us; 855us; 864us; 866us; 892us; 895us; 897us; 923us; 924us; 925us; 936us; 946us; 947us; 949us; 950us; 954us; 956us; 960us; 962us; 963us; 964us; 981us; 996us; 1013us; 1027us; 1044us; 1058us; 1075us; 1089us; 1106us; 1120us; 1137us; 1151us; 1153us; 1170us; 1172us; 1173us; 1190us; 1191us; 1208us; 1223us; 1224us; 1226us; 1228us; 1230us; 1232us; 1233us; 1237us; 1241us; 1242us; 1243us; 1244us; 1254us; 1264us; 1274us; 1284us; 1294us; 1304us; 1320us; 1335us; 1347us; 1362us; 1375us; 1391us; 1407us; 1423us; 1440us; 1457us; 1474us; 1491us; 1508us; 1525us; 1542us; 1559us; 1576us; 1593us; 1610us; 1627us; 1644us; 1661us; 1678us; 1695us; 1696us; 1697us; 1698us; 1699us; 1716us; 1733us; 1734us; 1738us; 1740us; 1741us; 1745us; 1748us; 1749us; 1760us; 1762us; 1763us; 1780us; 1781us; 1782us; 1799us; 1800us; 1801us; 1802us; 1804us; 1805us; 1806us; 1807us; 1808us; 1809us; 1810us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 1us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 7us; 5us; 9us; 7us; 2us; 2us; 7us; 5us; 5us; 4us; 3us; 5us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 2us; 2us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 25us; 26us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 65535us; 16389us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 65535us; 16429us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 16433us; 16434us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 65535us; 65535us; 65535us; 16444us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16462us; 16463us; 16464us; 16465us; 65535us; 65535us; 16466us; 65535us; 65535us; 16468us; 65535us; 65535us; 16469us; 65535us; 65535us; 16471us; 65535us; 16472us; 16474us; 65535us; 16476us; 16477us; 16478us; 65535us; 16479us; 16480us; 16481us; 16482us; 16483us; 16484us; 16485us; |]
let _fsyacc_reductions ()  =    [| 
# 554 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               Prog _1 
                   )
# 56 "CPar.fsy"
                 : Absyn.program));
# 574 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               [] 
                   )
# 61 "CPar.fsy"
                 : 'gentype_Topdecs));
# 584 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdecs));
# 596 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdec));
# 607 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               VardecAndAssign(first _1, second _1 , third _1) 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Topdec));
# 618 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "CPar.fsy"
                                                               _1 
                   )
# 69 "CPar.fsy"
                 : 'gentype_Topdec));
# 629 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 87 "CPar.fsy"
                 : 'gentype_Vardec));
# 641 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "CPar.fsy"
                                                               ((fst _2) _1, snd _2, _4) 
                   )
# 91 "CPar.fsy"
                 : 'gentype_VardecAndAssign));
# 654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 676 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "CPar.fsy"
                                                               _2                                      
                   )
# 109 "CPar.fsy"
                 : 'gentype_Vardesc));
# 687 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 111 "CPar.fsy"
                 : 'gentype_Vardesc));
# 698 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Vardesc));
# 710 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Fundec));
# 723 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Fundec));
# 737 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [] 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 747 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               _1 
                   )
# 126 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 758 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               [_1]     
                   )
# 130 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 131 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Block _2 
                   )
# 136 "CPar.fsy"
                 : 'gentype_Block));
# 792 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               [] 
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 802 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 814 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 826 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               DecAndAssign (first _1, second _1 , third _1) :: _3 
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 838 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               _1 
                   )
# 148 "CPar.fsy"
                 : 'gentype_Stmt));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               _1 
                   )
# 149 "CPar.fsy"
                 : 'gentype_Stmt));
# 860 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               Return None          
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 881 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 892 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               _1                   
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 903 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtM));
# 916 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_CaseStmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                                         Switch(_3,_6)  
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtM));
# 928 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtM));
# 940 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                         For(_3, _5, _7, _9) 
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtM));
# 954 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               DoWhile(_2, _5)       
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtM));
# 966 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               Break 
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtM));
# 976 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               Continue 
                   )
# 163 "CPar.fsy"
                 : 'gentype_StmtM));
# 986 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 169 "CPar.fsy"
                 : 'gentype_StmtU));
# 999 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtU));
# 1011 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtU));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                                 [Case(_2, _4)]   
                   )
# 179 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 1035 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                                 [Default(_3)]    
                   )
# 180 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_CaseStmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                                          [Case(_2,_4)] @ _5  
                   )
# 181 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 1059 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Access _1           
                   )
# 185 "CPar.fsy"
                 : 'gentype_Expr));
# 1070 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               _1                  
                   )
# 186 "CPar.fsy"
                 : 'gentype_Expr));
# 1081 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               _1                  
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1092 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                                PreInc _2           
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1103 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                                PreDec _2           
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                                NextInc _1           
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1125 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                                NextDec _1           
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1136 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1148 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               OpAssign("+", _1, _3)    
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1160 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               OpAssign("-", _1, _3)   
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1172 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               OpAssign("*", _1, _3)   
                   )
# 203 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1184 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               OpAssign("/", _1, _3)   
                   )
# 204 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1196 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               OpAssign("%", _1, _3)   
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1208 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1220 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1231 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1242 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1252 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_PrintfExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                                  Printf(_3, _4)
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1264 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 212 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1276 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 213 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1288 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 214 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1300 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 215 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1312 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1324 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1336 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 218 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 219 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1360 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 220 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1372 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 221 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1384 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 222 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1396 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               Prim3(_1, _3, _5)
                   )
# 223 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1409 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 224 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1421 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 225 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1433 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               [] 
                   )
# 229 "CPar.fsy"
                 : 'gentype_PrintfExpr));
# 1443 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               [_2] 
                   )
# 230 "CPar.fsy"
                 : 'gentype_PrintfExpr));
# 1454 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_PrintfExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               [_2] @ _3 
                   )
# 231 "CPar.fsy"
                 : 'gentype_PrintfExpr));
# 1466 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               CstI _1             
                   )
# 238 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1477 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               CstC _1 
                   )
# 239 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1488 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               CstS _1 
                   )
# 240 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1499 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               _2                  
                   )
# 241 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1510 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               Addr _2             
                   )
# 242 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1521 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "CPar.fsy"
                                                               AccVar _1           
                   )
# 246 "CPar.fsy"
                 : 'gentype_Access));
# 1532 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               _2                  
                   )
# 247 "CPar.fsy"
                 : 'gentype_Access));
# 1543 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 248 "CPar.fsy"
                 : 'gentype_Access));
# 1554 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 249 "CPar.fsy"
                 : 'gentype_Access));
# 1565 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 250 "CPar.fsy"
                 : 'gentype_Access));
# 1577 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               []       
                   )
# 254 "CPar.fsy"
                 : 'gentype_Exprs));
# 1587 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               _1       
                   )
# 255 "CPar.fsy"
                 : 'gentype_Exprs));
# 1598 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "CPar.fsy"
                                                               [_1]     
                   )
# 259 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1609 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 260 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1621 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "CPar.fsy"
                                                               _1       
                   )
# 264 "CPar.fsy"
                 : 'gentype_Const));
# 1632 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "CPar.fsy"
                                                               _1       
                   )
# 265 "CPar.fsy"
                 : 'gentype_Const));
# 1643 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "CPar.fsy"
                                                               - _2     
                   )
# 266 "CPar.fsy"
                 : 'gentype_Const));
# 1654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "CPar.fsy"
                                                               -1       
                   )
# 267 "CPar.fsy"
                 : 'gentype_Const));
# 1664 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 271 "CPar.fsy"
                                                               _1       
                   )
# 271 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "CPar.fsy"
                                                               _1 
                   )
# 275 "CPar.fsy"
                 : 'gentype_ConstString));
# 1686 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "CPar.fsy"
                                                               TypI     
                   )
# 279 "CPar.fsy"
                 : 'gentype_Type));
# 1696 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 "CPar.fsy"
                                                               TypC     
                   )
# 280 "CPar.fsy"
                 : 'gentype_Type));
# 1706 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "CPar.fsy"
                                                               TypS     
                   )
# 281 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1717 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 61;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
