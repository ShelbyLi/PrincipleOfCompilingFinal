// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

// let fst  (a, _, _) = a
// let snd (_, b, _) = b
// let thd  (_, _, c) = c
let first  (a, _, _) = a
let second (_, b, _) = b
let third  (_, _, c) = c


# 30 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QUES
  | COLON
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SELFINC
  | SELFDEC
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | BREAK
  | CASE
  | CHAR
  | CONTINUE
  | DEFAULT
  | DO
  | ELSE
  | FLOAT
  | FOR
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | PRINTF
  | RETURN
  | STRING
  | SWITCH
  | VOID
  | WHILE
  | CSTFLOAT of (float32)
  | CSTCHAR of (char)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QUES
    | TOKEN_COLON
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_BREAK
    | TOKEN_CASE
    | TOKEN_CHAR
    | TOKEN_CONTINUE
    | TOKEN_DEFAULT
    | TOKEN_DO
    | TOKEN_ELSE
    | TOKEN_FLOAT
    | TOKEN_FOR
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_PRINTF
    | TOKEN_RETURN
    | TOKEN_STRING
    | TOKEN_SWITCH
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_CSTFLOAT
    | TOKEN_CSTCHAR
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VardecAndAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_CaseStmt
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_PrintfExpr
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_ConstChar
    | NONTERM_ConstString
    | NONTERM_ConstFloat
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QUES  -> 11 
  | COLON  -> 12 
  | PLUSASSIGN  -> 13 
  | MINUSASSIGN  -> 14 
  | TIMESASSIGN  -> 15 
  | DIVASSIGN  -> 16 
  | MODASSIGN  -> 17 
  | NOT  -> 18 
  | SEQOR  -> 19 
  | SEQAND  -> 20 
  | EQ  -> 21 
  | NE  -> 22 
  | GT  -> 23 
  | LT  -> 24 
  | GE  -> 25 
  | LE  -> 26 
  | SELFINC  -> 27 
  | SELFDEC  -> 28 
  | PLUS  -> 29 
  | MINUS  -> 30 
  | TIMES  -> 31 
  | DIV  -> 32 
  | MOD  -> 33 
  | BREAK  -> 34 
  | CASE  -> 35 
  | CHAR  -> 36 
  | CONTINUE  -> 37 
  | DEFAULT  -> 38 
  | DO  -> 39 
  | ELSE  -> 40 
  | FLOAT  -> 41 
  | FOR  -> 42 
  | IF  -> 43 
  | INT  -> 44 
  | NULL  -> 45 
  | PRINT  -> 46 
  | PRINTLN  -> 47 
  | PRINTF  -> 48 
  | RETURN  -> 49 
  | STRING  -> 50 
  | SWITCH  -> 51 
  | VOID  -> 52 
  | WHILE  -> 53 
  | CSTFLOAT _ -> 54 
  | CSTCHAR _ -> 55 
  | CSTSTRING _ -> 56 
  | NAME _ -> 57 
  | CSTINT _ -> 58 
  | CSTBOOL _ -> 59 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QUES 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_PLUSASSIGN 
  | 14 -> TOKEN_MINUSASSIGN 
  | 15 -> TOKEN_TIMESASSIGN 
  | 16 -> TOKEN_DIVASSIGN 
  | 17 -> TOKEN_MODASSIGN 
  | 18 -> TOKEN_NOT 
  | 19 -> TOKEN_SEQOR 
  | 20 -> TOKEN_SEQAND 
  | 21 -> TOKEN_EQ 
  | 22 -> TOKEN_NE 
  | 23 -> TOKEN_GT 
  | 24 -> TOKEN_LT 
  | 25 -> TOKEN_GE 
  | 26 -> TOKEN_LE 
  | 27 -> TOKEN_SELFINC 
  | 28 -> TOKEN_SELFDEC 
  | 29 -> TOKEN_PLUS 
  | 30 -> TOKEN_MINUS 
  | 31 -> TOKEN_TIMES 
  | 32 -> TOKEN_DIV 
  | 33 -> TOKEN_MOD 
  | 34 -> TOKEN_BREAK 
  | 35 -> TOKEN_CASE 
  | 36 -> TOKEN_CHAR 
  | 37 -> TOKEN_CONTINUE 
  | 38 -> TOKEN_DEFAULT 
  | 39 -> TOKEN_DO 
  | 40 -> TOKEN_ELSE 
  | 41 -> TOKEN_FLOAT 
  | 42 -> TOKEN_FOR 
  | 43 -> TOKEN_IF 
  | 44 -> TOKEN_INT 
  | 45 -> TOKEN_NULL 
  | 46 -> TOKEN_PRINT 
  | 47 -> TOKEN_PRINTLN 
  | 48 -> TOKEN_PRINTF 
  | 49 -> TOKEN_RETURN 
  | 50 -> TOKEN_STRING 
  | 51 -> TOKEN_SWITCH 
  | 52 -> TOKEN_VOID 
  | 53 -> TOKEN_WHILE 
  | 54 -> TOKEN_CSTFLOAT 
  | 55 -> TOKEN_CSTCHAR 
  | 56 -> TOKEN_CSTSTRING 
  | 57 -> TOKEN_NAME 
  | 58 -> TOKEN_CSTINT 
  | 59 -> TOKEN_CSTBOOL 
  | 62 -> TOKEN_end_of_input
  | 60 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VardecAndAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_CaseStmt 
    | 42 -> NONTERM_CaseStmt 
    | 43 -> NONTERM_CaseStmt 
    | 44 -> NONTERM_Expr 
    | 45 -> NONTERM_Expr 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_ExprNotAccess 
    | 74 -> NONTERM_ExprNotAccess 
    | 75 -> NONTERM_ExprNotAccess 
    | 76 -> NONTERM_ExprNotAccess 
    | 77 -> NONTERM_ExprNotAccess 
    | 78 -> NONTERM_PrintfExpr 
    | 79 -> NONTERM_PrintfExpr 
    | 80 -> NONTERM_PrintfExpr 
    | 81 -> NONTERM_AtExprNotAccess 
    | 82 -> NONTERM_AtExprNotAccess 
    | 83 -> NONTERM_AtExprNotAccess 
    | 84 -> NONTERM_AtExprNotAccess 
    | 85 -> NONTERM_AtExprNotAccess 
    | 86 -> NONTERM_AtExprNotAccess 
    | 87 -> NONTERM_Access 
    | 88 -> NONTERM_Access 
    | 89 -> NONTERM_Access 
    | 90 -> NONTERM_Access 
    | 91 -> NONTERM_Access 
    | 92 -> NONTERM_Exprs 
    | 93 -> NONTERM_Exprs 
    | 94 -> NONTERM_Exprs1 
    | 95 -> NONTERM_Exprs1 
    | 96 -> NONTERM_Const 
    | 97 -> NONTERM_Const 
    | 98 -> NONTERM_Const 
    | 99 -> NONTERM_Const 
    | 100 -> NONTERM_ConstChar 
    | 101 -> NONTERM_ConstString 
    | 102 -> NONTERM_ConstFloat 
    | 103 -> NONTERM_ConstFloat 
    | 104 -> NONTERM_Type 
    | 105 -> NONTERM_Type 
    | 106 -> NONTERM_Type 
    | 107 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 62 
let _fsyacc_tagOfErrorTerminal = 60

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QUES  -> "QUES" 
  | COLON  -> "COLON" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | BREAK  -> "BREAK" 
  | CASE  -> "CASE" 
  | CHAR  -> "CHAR" 
  | CONTINUE  -> "CONTINUE" 
  | DEFAULT  -> "DEFAULT" 
  | DO  -> "DO" 
  | ELSE  -> "ELSE" 
  | FLOAT  -> "FLOAT" 
  | FOR  -> "FOR" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | PRINTF  -> "PRINTF" 
  | RETURN  -> "RETURN" 
  | STRING  -> "STRING" 
  | SWITCH  -> "SWITCH" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QUES  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | PRINTF  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 8us; 4us; 8us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 10us; 4us; 10us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 16us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 70us; 63us; 71us; 63us; 73us; 63us; 74us; 63us; 89us; 63us; 90us; 63us; 99us; 63us; 101us; 63us; 117us; 63us; 120us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 5us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 71us; 113us; 14us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 70us; 72us; 71us; 55us; 73us; 75us; 74us; 75us; 89us; 91us; 90us; 91us; 99us; 100us; 101us; 102us; 117us; 118us; 120us; 121us; 7us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 71us; 56us; 74us; 112us; 90us; 114us; 2us; 65535us; 80us; 81us; 118us; 122us; 57us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 66us; 69us; 67us; 68us; 70us; 57us; 71us; 57us; 73us; 57us; 74us; 57us; 77us; 78us; 85us; 88us; 86us; 87us; 89us; 57us; 90us; 57us; 93us; 94us; 95us; 96us; 97us; 98us; 99us; 57us; 101us; 57us; 104us; 105us; 117us; 57us; 120us; 57us; 134us; 135us; 136us; 137us; 138us; 139us; 140us; 141us; 142us; 143us; 144us; 145us; 147us; 180us; 150us; 151us; 152us; 153us; 181us; 160us; 182us; 161us; 183us; 162us; 184us; 163us; 185us; 164us; 186us; 165us; 187us; 166us; 188us; 167us; 189us; 168us; 190us; 169us; 191us; 170us; 192us; 171us; 193us; 172us; 194us; 173us; 195us; 175us; 196us; 174us; 198us; 176us; 200us; 177us; 201us; 178us; 207us; 174us; 208us; 174us; 219us; 179us; 222us; 180us; 57us; 65535us; 16us; 125us; 43us; 125us; 46us; 125us; 49us; 125us; 52us; 125us; 59us; 125us; 66us; 125us; 67us; 125us; 70us; 125us; 71us; 125us; 73us; 125us; 74us; 125us; 77us; 125us; 85us; 125us; 86us; 125us; 89us; 125us; 90us; 125us; 93us; 125us; 95us; 125us; 97us; 125us; 99us; 125us; 101us; 125us; 104us; 125us; 117us; 125us; 120us; 125us; 134us; 125us; 136us; 125us; 138us; 125us; 140us; 125us; 142us; 125us; 144us; 125us; 147us; 125us; 150us; 125us; 152us; 125us; 181us; 125us; 182us; 125us; 183us; 125us; 184us; 125us; 185us; 125us; 186us; 125us; 187us; 125us; 188us; 125us; 189us; 125us; 190us; 125us; 191us; 125us; 192us; 125us; 193us; 125us; 194us; 125us; 195us; 125us; 196us; 126us; 198us; 125us; 200us; 125us; 201us; 125us; 207us; 126us; 208us; 126us; 219us; 125us; 222us; 125us; 2us; 65535us; 157us; 158us; 178us; 202us; 59us; 65535us; 16us; 127us; 43us; 127us; 46us; 127us; 49us; 127us; 52us; 127us; 59us; 127us; 66us; 127us; 67us; 127us; 70us; 127us; 71us; 127us; 73us; 127us; 74us; 127us; 77us; 127us; 85us; 127us; 86us; 127us; 89us; 127us; 90us; 127us; 93us; 127us; 95us; 127us; 97us; 127us; 99us; 127us; 101us; 127us; 104us; 127us; 115us; 116us; 117us; 127us; 120us; 127us; 134us; 127us; 136us; 127us; 138us; 127us; 140us; 127us; 142us; 127us; 144us; 127us; 147us; 127us; 150us; 127us; 152us; 127us; 181us; 127us; 182us; 127us; 183us; 127us; 184us; 127us; 185us; 127us; 186us; 127us; 187us; 127us; 188us; 127us; 189us; 127us; 190us; 127us; 191us; 127us; 192us; 127us; 193us; 127us; 194us; 127us; 195us; 127us; 196us; 127us; 198us; 127us; 200us; 127us; 201us; 127us; 207us; 127us; 208us; 127us; 216us; 218us; 219us; 127us; 222us; 127us; 62us; 65535us; 16us; 124us; 43us; 124us; 46us; 124us; 49us; 124us; 52us; 124us; 59us; 124us; 66us; 124us; 67us; 124us; 70us; 124us; 71us; 124us; 73us; 124us; 74us; 124us; 77us; 124us; 85us; 124us; 86us; 124us; 89us; 124us; 90us; 124us; 93us; 124us; 95us; 124us; 97us; 124us; 99us; 124us; 101us; 124us; 104us; 124us; 117us; 124us; 120us; 124us; 128us; 129us; 130us; 131us; 134us; 124us; 136us; 124us; 138us; 124us; 140us; 124us; 142us; 124us; 144us; 124us; 147us; 124us; 150us; 124us; 152us; 124us; 181us; 124us; 182us; 124us; 183us; 124us; 184us; 124us; 185us; 124us; 186us; 124us; 187us; 124us; 188us; 124us; 189us; 124us; 190us; 124us; 191us; 124us; 192us; 124us; 193us; 124us; 194us; 124us; 195us; 124us; 196us; 123us; 198us; 124us; 200us; 124us; 201us; 124us; 207us; 124us; 208us; 123us; 210us; 211us; 213us; 214us; 216us; 217us; 219us; 124us; 222us; 124us; 1us; 65535us; 147us; 148us; 2us; 65535us; 147us; 221us; 222us; 223us; 59us; 65535us; 16us; 203us; 43us; 203us; 46us; 203us; 49us; 203us; 52us; 203us; 59us; 203us; 66us; 203us; 67us; 203us; 70us; 203us; 71us; 203us; 73us; 203us; 74us; 203us; 77us; 203us; 85us; 203us; 86us; 203us; 89us; 203us; 90us; 203us; 93us; 203us; 95us; 203us; 97us; 203us; 99us; 203us; 101us; 203us; 104us; 203us; 115us; 203us; 117us; 203us; 120us; 203us; 134us; 203us; 136us; 203us; 138us; 203us; 140us; 203us; 142us; 203us; 144us; 203us; 147us; 203us; 150us; 203us; 152us; 203us; 181us; 203us; 182us; 203us; 183us; 203us; 184us; 203us; 185us; 203us; 186us; 203us; 187us; 203us; 188us; 203us; 189us; 203us; 190us; 203us; 191us; 203us; 192us; 203us; 193us; 203us; 194us; 203us; 195us; 203us; 196us; 203us; 198us; 203us; 200us; 203us; 201us; 203us; 207us; 203us; 208us; 203us; 216us; 203us; 219us; 203us; 222us; 203us; 59us; 65535us; 16us; 204us; 43us; 204us; 46us; 204us; 49us; 204us; 52us; 204us; 59us; 204us; 66us; 204us; 67us; 204us; 70us; 204us; 71us; 204us; 73us; 204us; 74us; 204us; 77us; 204us; 85us; 204us; 86us; 204us; 89us; 204us; 90us; 204us; 93us; 204us; 95us; 204us; 97us; 204us; 99us; 204us; 101us; 204us; 104us; 204us; 115us; 204us; 117us; 204us; 120us; 204us; 134us; 204us; 136us; 204us; 138us; 204us; 140us; 204us; 142us; 204us; 144us; 204us; 147us; 204us; 150us; 204us; 152us; 204us; 181us; 204us; 182us; 204us; 183us; 204us; 184us; 204us; 185us; 204us; 186us; 204us; 187us; 204us; 188us; 204us; 189us; 204us; 190us; 204us; 191us; 204us; 192us; 204us; 193us; 204us; 194us; 204us; 195us; 204us; 196us; 204us; 198us; 204us; 200us; 204us; 201us; 204us; 207us; 204us; 208us; 204us; 216us; 204us; 219us; 204us; 222us; 204us; 59us; 65535us; 16us; 205us; 43us; 205us; 46us; 205us; 49us; 205us; 52us; 205us; 59us; 205us; 66us; 205us; 67us; 205us; 70us; 205us; 71us; 205us; 73us; 205us; 74us; 205us; 77us; 205us; 85us; 205us; 86us; 205us; 89us; 205us; 90us; 205us; 93us; 205us; 95us; 205us; 97us; 205us; 99us; 205us; 101us; 205us; 104us; 205us; 115us; 205us; 117us; 205us; 120us; 205us; 134us; 205us; 136us; 205us; 138us; 205us; 140us; 205us; 142us; 205us; 144us; 205us; 147us; 205us; 150us; 205us; 152us; 205us; 181us; 205us; 182us; 205us; 183us; 205us; 184us; 205us; 185us; 205us; 186us; 205us; 187us; 205us; 188us; 205us; 189us; 205us; 190us; 205us; 191us; 205us; 192us; 205us; 193us; 205us; 194us; 205us; 195us; 205us; 196us; 205us; 198us; 205us; 200us; 205us; 201us; 205us; 207us; 205us; 208us; 205us; 216us; 205us; 219us; 205us; 222us; 205us; 59us; 65535us; 16us; 206us; 43us; 206us; 46us; 206us; 49us; 206us; 52us; 206us; 59us; 206us; 66us; 206us; 67us; 206us; 70us; 206us; 71us; 206us; 73us; 206us; 74us; 206us; 77us; 206us; 85us; 206us; 86us; 206us; 89us; 206us; 90us; 206us; 93us; 206us; 95us; 206us; 97us; 206us; 99us; 206us; 101us; 206us; 104us; 206us; 115us; 206us; 117us; 206us; 120us; 206us; 134us; 206us; 136us; 206us; 138us; 206us; 140us; 206us; 142us; 206us; 144us; 206us; 147us; 206us; 150us; 206us; 152us; 206us; 181us; 206us; 182us; 206us; 183us; 206us; 184us; 206us; 185us; 206us; 186us; 206us; 187us; 206us; 188us; 206us; 189us; 206us; 190us; 206us; 191us; 206us; 192us; 206us; 193us; 206us; 194us; 206us; 195us; 206us; 196us; 206us; 198us; 206us; 200us; 206us; 201us; 206us; 207us; 206us; 208us; 206us; 216us; 206us; 219us; 206us; 222us; 206us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 59us; 64us; 70us; 85us; 93us; 96us; 154us; 212us; 215us; 275us; 338us; 340us; 343us; 403us; 463us; 523us; 583us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 15us; 8us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 31us; 38us; 1us; 26us; 15us; 27us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 15us; 29us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 29us; 1us; 30us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 3us; 31us; 38us; 39us; 17us; 31us; 38us; 39us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 31us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 31us; 3us; 31us; 38us; 39us; 1us; 31us; 1us; 31us; 2us; 31us; 38us; 1us; 31us; 1us; 32us; 1us; 32us; 15us; 32us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 33us; 2us; 33us; 40us; 1us; 33us; 2us; 33us; 40us; 16us; 33us; 40us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 33us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 33us; 2us; 33us; 40us; 1us; 33us; 1us; 34us; 1us; 34us; 15us; 34us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 15us; 34us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 15us; 34us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 15us; 35us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 37us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 40us; 2us; 41us; 43us; 2us; 41us; 43us; 2us; 41us; 43us; 2us; 41us; 43us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 11us; 44us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 88us; 91us; 10us; 44us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 91us; 1us; 45us; 2us; 45us; 85us; 1us; 46us; 1us; 47us; 2us; 47us; 91us; 1us; 48us; 2us; 48us; 91us; 1us; 49us; 1us; 50us; 1us; 51us; 15us; 51us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 52us; 15us; 52us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 53us; 15us; 53us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 54us; 15us; 54us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 55us; 15us; 55us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 56us; 15us; 56us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 2us; 57us; 87us; 1us; 57us; 1us; 57us; 1us; 57us; 1us; 58us; 15us; 58us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 59us; 15us; 59us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 15us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 74us; 75us; 14us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 75us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 76us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 77us; 16us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 79us; 80us; 15us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 91us; 16us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 94us; 95us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 75us; 4us; 76us; 77us; 85us; 88us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 77us; 2us; 79us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 2us; 85us; 88us; 1us; 85us; 1us; 86us; 2us; 86us; 91us; 1us; 87us; 1us; 88us; 2us; 88us; 91us; 1us; 88us; 2us; 89us; 90us; 2us; 89us; 91us; 1us; 90us; 1us; 91us; 1us; 91us; 1us; 93us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 97us; 2us; 98us; 103us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 102us; 1us; 103us; 1us; 104us; 1us; 105us; 1us; 106us; 1us; 107us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 58us; 60us; 63us; 65us; 69us; 71us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 111us; 113us; 115us; 117us; 119us; 121us; 123us; 125us; 127us; 129us; 131us; 133us; 135us; 137us; 139us; 143us; 145us; 161us; 163us; 166us; 168us; 184us; 186us; 188us; 190us; 194us; 196us; 200us; 218us; 234us; 236us; 240us; 242us; 244us; 247us; 249us; 251us; 253us; 269us; 271us; 273us; 275us; 277us; 279us; 282us; 284us; 287us; 304us; 320us; 322us; 325us; 327us; 329us; 331us; 347us; 349us; 365us; 367us; 383us; 385us; 387us; 389us; 391us; 393us; 395us; 411us; 413us; 415us; 417us; 419us; 421us; 423us; 425us; 427us; 429us; 432us; 435us; 438us; 441us; 443us; 445us; 447us; 449us; 461us; 472us; 474us; 477us; 479us; 481us; 484us; 486us; 489us; 491us; 493us; 495us; 511us; 513us; 529us; 531us; 547us; 549us; 565us; 567us; 583us; 585us; 601us; 604us; 606us; 608us; 610us; 612us; 628us; 630us; 646us; 648us; 650us; 652us; 654us; 656us; 658us; 674us; 690us; 706us; 722us; 738us; 754us; 770us; 786us; 802us; 818us; 834us; 850us; 866us; 882us; 897us; 913us; 929us; 945us; 962us; 978us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1025us; 1030us; 1032us; 1034us; 1036us; 1038us; 1041us; 1043us; 1045us; 1047us; 1049us; 1051us; 1053us; 1056us; 1058us; 1060us; 1063us; 1065us; 1067us; 1070us; 1072us; 1075us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1090us; 1092us; 1094us; 1097us; 1099us; 1101us; 1103us; 1105us; 1107us; 1109us; 1111us; 1113us; 1115us; |]
let _fsyacc_action_rows = 237
let _fsyacc_actionTableElements = [|5us; 16386us; 36us; 234us; 41us; 236us; 44us; 233us; 50us; 235us; 52us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 5us; 16386us; 36us; 234us; 41us; 236us; 44us; 233us; 50us; 235us; 52us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 1us; 32768us; 7us; 9us; 0us; 16389us; 0us; 16390us; 3us; 32768us; 1us; 22us; 31us; 20us; 57us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 57us; 18us; 3us; 32768us; 1us; 22us; 31us; 20us; 57us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 14us; 16392us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 31us; 20us; 57us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 31us; 20us; 57us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 58us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 57us; 30us; 1us; 32768us; 1us; 31us; 4us; 16400us; 36us; 234us; 41us; 236us; 44us; 233us; 50us; 235us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 4us; 16400us; 36us; 234us; 41us; 236us; 44us; 233us; 50us; 235us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 4us; 32768us; 36us; 234us; 41us; 236us; 44us; 233us; 50us; 235us; 0us; 16403us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 36us; 234us; 37us; 110us; 39us; 101us; 41us; 236us; 42us; 92us; 43us; 65us; 44us; 233us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 50us; 235us; 51us; 76us; 53us; 84us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 1us; 32768us; 4us; 45us; 0us; 16404us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 36us; 234us; 37us; 110us; 39us; 101us; 41us; 236us; 42us; 92us; 43us; 65us; 44us; 233us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 50us; 235us; 51us; 76us; 53us; 84us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16406us; 1us; 32768us; 7us; 49us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 36us; 234us; 37us; 110us; 39us; 101us; 41us; 236us; 42us; 92us; 43us; 65us; 44us; 233us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 50us; 235us; 51us; 76us; 53us; 84us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16407us; 1us; 32768us; 7us; 52us; 30us; 16405us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 36us; 234us; 37us; 110us; 39us; 101us; 41us; 236us; 42us; 92us; 43us; 65us; 44us; 233us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 50us; 235us; 51us; 76us; 53us; 84us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 40us; 74us; 0us; 16410us; 15us; 32768us; 7us; 58us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 0us; 16411us; 18us; 32768us; 1us; 196us; 7us; 60us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16412us; 15us; 32768us; 7us; 62us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 66us; 1us; 32768us; 1us; 67us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 15us; 32768us; 2us; 71us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 15us; 32768us; 2us; 70us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 64us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 83us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 65us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 84us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 1us; 32768us; 40us; 73us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 64us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 83us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 65us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 84us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16415us; 1us; 32768us; 1us; 77us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 15us; 32768us; 2us; 79us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 1us; 32768us; 3us; 80us; 2us; 32768us; 35us; 115us; 38us; 119us; 1us; 32768us; 4us; 82us; 0us; 16416us; 1us; 32768us; 1us; 85us; 1us; 32768us; 1us; 86us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 15us; 32768us; 2us; 90us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 15us; 32768us; 2us; 89us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 64us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 83us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 65us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 84us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16417us; 1us; 32768us; 1us; 93us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 15us; 32768us; 7us; 95us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 15us; 32768us; 7us; 97us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 15us; 32768us; 2us; 99us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 64us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 83us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16418us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 64us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 83us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 1us; 32768us; 53us; 103us; 1us; 32768us; 1us; 104us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 15us; 32768us; 2us; 106us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 1us; 32768us; 7us; 107us; 0us; 16419us; 1us; 32768us; 7us; 109us; 0us; 16420us; 1us; 32768us; 7us; 111us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 9us; 32768us; 1us; 207us; 10us; 210us; 30us; 226us; 45us; 228us; 54us; 231us; 55us; 229us; 56us; 230us; 58us; 224us; 59us; 225us; 1us; 32768us; 12us; 117us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 64us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 83us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 2us; 16425us; 35us; 115us; 38us; 119us; 1us; 32768us; 12us; 120us; 26us; 32768us; 1us; 196us; 3us; 43us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 34us; 108us; 37us; 110us; 39us; 101us; 42us; 92us; 43us; 64us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 49us; 59us; 51us; 76us; 53us; 83us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16426us; 0us; 16427us; 10us; 16428us; 2us; 215us; 5us; 219us; 9us; 134us; 13us; 136us; 14us; 138us; 15us; 140us; 16us; 142us; 17us; 144us; 27us; 132us; 28us; 133us; 9us; 16428us; 5us; 219us; 9us; 134us; 13us; 136us; 14us; 138us; 15us; 140us; 16us; 142us; 17us; 144us; 27us; 132us; 28us; 133us; 0us; 16429us; 1us; 16429us; 2us; 209us; 0us; 16430us; 3us; 32768us; 1us; 213us; 31us; 216us; 57us; 212us; 1us; 16431us; 5us; 219us; 3us; 32768us; 1us; 213us; 31us; 216us; 57us; 212us; 1us; 16432us; 5us; 219us; 0us; 16433us; 0us; 16434us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 14us; 16435us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 13us; 16436us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 13us; 16437us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 13us; 16438us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 13us; 16439us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 13us; 16440us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 1us; 16471us; 1us; 147us; 17us; 16476us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 1us; 32768us; 2us; 149us; 0us; 16441us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16442us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 14us; 16443us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 0us; 16444us; 1us; 32768us; 1us; 156us; 1us; 32768us; 56us; 157us; 1us; 16462us; 8us; 201us; 1us; 32768us; 2us; 159us; 0us; 16445us; 3us; 16446us; 31us; 183us; 32us; 184us; 33us; 185us; 3us; 16447us; 31us; 183us; 32us; 184us; 33us; 185us; 0us; 16448us; 0us; 16449us; 0us; 16450us; 9us; 16451us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 9us; 16452us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 9us; 16453us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 9us; 16454us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 9us; 16455us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 9us; 16456us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 15us; 32768us; 11us; 192us; 12us; 193us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 14us; 16457us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 11us; 16458us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 14us; 32768us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 12us; 16459us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 14us; 16460us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 14us; 16461us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 15us; 16462us; 8us; 201us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 15us; 32768us; 6us; 220us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 15us; 16478us; 8us; 222us; 11us; 192us; 19us; 195us; 20us; 194us; 21us; 186us; 22us; 187us; 23us; 188us; 24us; 189us; 25us; 190us; 26us; 191us; 29us; 181us; 30us; 182us; 31us; 183us; 32us; 184us; 33us; 185us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 19us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 36us; 197us; 44us; 199us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 1us; 32768us; 2us; 198us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 1us; 32768us; 2us; 200us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16469us; 3us; 32768us; 1us; 213us; 31us; 216us; 57us; 212us; 1us; 16470us; 5us; 219us; 0us; 16471us; 3us; 32768us; 1us; 213us; 31us; 216us; 57us; 212us; 2us; 32768us; 2us; 215us; 5us; 219us; 0us; 16472us; 11us; 32768us; 1us; 208us; 10us; 210us; 30us; 226us; 31us; 216us; 45us; 228us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 212us; 58us; 224us; 59us; 225us; 1us; 16473us; 5us; 219us; 0us; 16474us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16475us; 0us; 16477us; 17us; 32768us; 1us; 196us; 10us; 210us; 18us; 150us; 27us; 128us; 28us; 130us; 30us; 226us; 31us; 216us; 45us; 228us; 46us; 152us; 47us; 154us; 48us; 155us; 54us; 231us; 55us; 229us; 56us; 230us; 57us; 146us; 58us; 224us; 59us; 225us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 2us; 32768us; 54us; 232us; 58us; 227us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; 0us; 16486us; 0us; 16487us; 0us; 16488us; 0us; 16489us; 0us; 16490us; 0us; 16491us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 6us; 7us; 9us; 10us; 16us; 17us; 19us; 20us; 22us; 23us; 24us; 28us; 32us; 36us; 39us; 41us; 59us; 74us; 75us; 77us; 81us; 83us; 87us; 90us; 91us; 94us; 95us; 97us; 98us; 100us; 102us; 107us; 109us; 111us; 112us; 117us; 119us; 121us; 122us; 123us; 125us; 130us; 131us; 162us; 164us; 165us; 196us; 197us; 199us; 230us; 231us; 233us; 264us; 265us; 266us; 268us; 269us; 285us; 286us; 305us; 306us; 322us; 323us; 324us; 326us; 328us; 346us; 364us; 380us; 396us; 423us; 450us; 452us; 479us; 506us; 507us; 509us; 527us; 543us; 545us; 548us; 550us; 551us; 553us; 555us; 573us; 591us; 607us; 623us; 650us; 677us; 678us; 680us; 698us; 714us; 732us; 748us; 766us; 782us; 809us; 810us; 837us; 839us; 841us; 859us; 875us; 877us; 878us; 880us; 881us; 883us; 884us; 885us; 886us; 887us; 897us; 899us; 926us; 929us; 931us; 958us; 959us; 960us; 971us; 981us; 982us; 984us; 985us; 989us; 991us; 995us; 997us; 998us; 999us; 1017us; 1032us; 1050us; 1064us; 1082us; 1096us; 1114us; 1128us; 1146us; 1160us; 1178us; 1192us; 1194us; 1212us; 1214us; 1215us; 1233us; 1234us; 1252us; 1267us; 1268us; 1270us; 1272us; 1274us; 1276us; 1277us; 1281us; 1285us; 1286us; 1287us; 1288us; 1298us; 1308us; 1318us; 1328us; 1338us; 1348us; 1364us; 1379us; 1391us; 1406us; 1419us; 1434us; 1449us; 1465us; 1481us; 1497us; 1515us; 1533us; 1551us; 1569us; 1587us; 1605us; 1623us; 1641us; 1659us; 1677us; 1695us; 1713us; 1731us; 1749us; 1767us; 1787us; 1789us; 1807us; 1809us; 1827us; 1845us; 1846us; 1847us; 1848us; 1849us; 1850us; 1868us; 1886us; 1887us; 1891us; 1893us; 1894us; 1898us; 1901us; 1902us; 1914us; 1916us; 1917us; 1935us; 1936us; 1937us; 1955us; 1956us; 1957us; 1958us; 1961us; 1962us; 1963us; 1964us; 1965us; 1966us; 1967us; 1968us; 1969us; 1970us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 1us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 7us; 5us; 9us; 7us; 2us; 2us; 7us; 5us; 5us; 4us; 3us; 5us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 2us; 2us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 4us; 4us; 0us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 19us; 19us; 19us; 19us; 19us; 19us; 20us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 25us; 26us; 26us; 27us; 27us; 27us; 27us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 65535us; 16389us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 16421us; 16422us; 16423us; 16424us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 65535us; 16429us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 16433us; 16434us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16441us; 65535us; 65535us; 65535us; 65535us; 16444us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16464us; 16465us; 16466us; 16467us; 16468us; 65535us; 65535us; 16469us; 65535us; 65535us; 16471us; 65535us; 65535us; 16472us; 65535us; 65535us; 16474us; 65535us; 16475us; 16477us; 65535us; 16479us; 16480us; 16481us; 65535us; 16482us; 16483us; 16484us; 16485us; 16486us; 16487us; 16488us; 16489us; 16490us; 16491us; |]
let _fsyacc_reductions ()  =    [| 
# 573 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 582 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               Prog _1 
                   )
# 61 "CPar.fsy"
                 : Absyn.program));
# 593 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "CPar.fsy"
                                                               [] 
                   )
# 66 "CPar.fsy"
                 : 'gentype_Topdecs));
# 603 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 67 "CPar.fsy"
                 : 'gentype_Topdecs));
# 615 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 71 "CPar.fsy"
                 : 'gentype_Topdec));
# 626 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               VardecAndAssign(first _1, second _1 , third _1) 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Topdec));
# 637 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CPar.fsy"
                                                               _1 
                   )
# 75 "CPar.fsy"
                 : 'gentype_Topdec));
# 648 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 93 "CPar.fsy"
                 : 'gentype_Vardec));
# 660 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               ((fst _2) _1, snd _2, _4) 
                   )
# 97 "CPar.fsy"
                 : 'gentype_VardecAndAssign));
# 673 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 108 "CPar.fsy"
                 : 'gentype_Vardesc));
# 684 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 113 "CPar.fsy"
                 : 'gentype_Vardesc));
# 695 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               _2                                      
                   )
# 115 "CPar.fsy"
                 : 'gentype_Vardesc));
# 706 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 117 "CPar.fsy"
                 : 'gentype_Vardesc));
# 717 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Vardesc));
# 729 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Fundec));
# 742 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 135 "CPar.fsy"
                 : 'gentype_Fundec));
# 756 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               [] 
                   )
# 140 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 766 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1 
                   )
# 141 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 777 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               [_1]     
                   )
# 145 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 788 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 146 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 800 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               Block _2 
                   )
# 151 "CPar.fsy"
                 : 'gentype_Block));
# 811 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               [] 
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 821 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 833 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 845 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VardecAndAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               DecAndAssign (first _1, second _1 , third _1) :: _3 
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 857 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               _1 
                   )
# 163 "CPar.fsy"
                 : 'gentype_Stmt));
# 868 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               _1 
                   )
# 164 "CPar.fsy"
                 : 'gentype_Stmt));
# 879 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 168 "CPar.fsy"
                 : 'gentype_StmtM));
# 890 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Return None          
                   )
# 169 "CPar.fsy"
                 : 'gentype_StmtM));
# 900 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 170 "CPar.fsy"
                 : 'gentype_StmtM));
# 911 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               _1                   
                   )
# 171 "CPar.fsy"
                 : 'gentype_StmtM));
# 922 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 172 "CPar.fsy"
                 : 'gentype_StmtM));
# 935 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_CaseStmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                                         Switch(_3,_6)  
                   )
# 173 "CPar.fsy"
                 : 'gentype_StmtM));
# 947 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 174 "CPar.fsy"
                 : 'gentype_StmtM));
# 959 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                                         For(_3, _5, _7, _9) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_StmtM));
# 973 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               DoWhile(_2, _5)       
                   )
# 176 "CPar.fsy"
                 : 'gentype_StmtM));
# 985 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Break 
                   )
# 177 "CPar.fsy"
                 : 'gentype_StmtM));
# 995 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Continue 
                   )
# 178 "CPar.fsy"
                 : 'gentype_StmtM));
# 1005 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 184 "CPar.fsy"
                 : 'gentype_StmtU));
# 1018 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_StmtU));
# 1030 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 186 "CPar.fsy"
                 : 'gentype_StmtU));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                                 [Case(_2, _4)]   
                   )
# 194 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                                 [Default(_3)]    
                   )
# 195 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 1065 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_CaseStmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                                          [Case(_2,_4)] @ _5  
                   )
# 196 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Access _1           
                   )
# 200 "CPar.fsy"
                 : 'gentype_Expr));
# 1089 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               _1                  
                   )
# 201 "CPar.fsy"
                 : 'gentype_Expr));
# 1100 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               _1                  
                   )
# 205 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                                PreInc _2           
                   )
# 206 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                                PreDec _2           
                   )
# 207 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1133 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                                NextInc _1           
                   )
# 208 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1144 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                                NextDec _1           
                   )
# 209 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1155 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 210 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1167 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               OpAssign("+", _1, _3)    
                   )
# 216 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1179 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               OpAssign("-", _1, _3)   
                   )
# 217 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1191 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               OpAssign("*", _1, _3)   
                   )
# 218 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1203 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               OpAssign("/", _1, _3)   
                   )
# 219 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1215 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               OpAssign("%", _1, _3)   
                   )
# 220 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1227 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 221 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1239 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 222 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1250 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 223 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1261 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 224 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1271 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_PrintfExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                                  Printf(_3, _4)
                   )
# 225 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1283 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 227 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1295 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 228 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1307 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 229 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1319 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 230 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1331 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 231 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1343 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 232 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1355 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 233 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1367 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 234 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1379 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 235 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1391 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 236 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1403 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 237 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1415 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               Prim3(_1, _3, _5)
                   )
# 238 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1428 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 239 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1440 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 240 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1452 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               ToChar(_4) 
                   )
# 241 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1463 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "CPar.fsy"
                                                               ToInt(_4) 
                   )
# 242 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1474 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               [] 
                   )
# 247 "CPar.fsy"
                 : 'gentype_PrintfExpr));
# 1484 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               [_2] 
                   )
# 248 "CPar.fsy"
                 : 'gentype_PrintfExpr));
# 1495 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_PrintfExpr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               [_2] @ _3 
                   )
# 249 "CPar.fsy"
                 : 'gentype_PrintfExpr));
# 1507 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               CstI _1             
                   )
# 256 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1518 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstChar in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               CstC _1 
                   )
# 257 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CPar.fsy"
                                                               CstS _1 
                   )
# 258 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1540 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "CPar.fsy"
                                                               CstF _1 
                   )
# 259 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1551 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "CPar.fsy"
                                                               _2                  
                   )
# 260 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1562 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "CPar.fsy"
                                                               Addr _2             
                   )
# 261 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1573 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "CPar.fsy"
                                                               AccVar _1           
                   )
# 265 "CPar.fsy"
                 : 'gentype_Access));
# 1584 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "CPar.fsy"
                                                               _2                  
                   )
# 266 "CPar.fsy"
                 : 'gentype_Access));
# 1595 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 267 "CPar.fsy"
                 : 'gentype_Access));
# 1606 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 268 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 268 "CPar.fsy"
                 : 'gentype_Access));
# 1617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 269 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 269 "CPar.fsy"
                 : 'gentype_Access));
# 1629 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "CPar.fsy"
                                                               []       
                   )
# 273 "CPar.fsy"
                 : 'gentype_Exprs));
# 1639 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 "CPar.fsy"
                                                               _1       
                   )
# 274 "CPar.fsy"
                 : 'gentype_Exprs));
# 1650 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "CPar.fsy"
                                                               [_1]     
                   )
# 278 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1661 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 279 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1673 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "CPar.fsy"
                                                               _1       
                   )
# 283 "CPar.fsy"
                 : 'gentype_Const));
# 1684 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 "CPar.fsy"
                                                               _1       
                   )
# 284 "CPar.fsy"
                 : 'gentype_Const));
# 1695 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 "CPar.fsy"
                                                               - _2     
                   )
# 285 "CPar.fsy"
                 : 'gentype_Const));
# 1706 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "CPar.fsy"
                                                               0       
                   )
# 286 "CPar.fsy"
                 : 'gentype_Const));
# 1716 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "CPar.fsy"
                                                               _1       
                   )
# 290 "CPar.fsy"
                 : 'gentype_ConstChar));
# 1727 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 "CPar.fsy"
                                                               _1       
                   )
# 294 "CPar.fsy"
                 : 'gentype_ConstString));
# 1738 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "CPar.fsy"
                                                                _1      
                   )
# 298 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1749 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 "CPar.fsy"
                                                                - _2    
                   )
# 299 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1760 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 "CPar.fsy"
                                                               TypI     
                   )
# 303 "CPar.fsy"
                 : 'gentype_Type));
# 1770 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 304 "CPar.fsy"
                                                               TypC     
                   )
# 304 "CPar.fsy"
                 : 'gentype_Type));
# 1780 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "CPar.fsy"
                                                               TypS     
                   )
# 305 "CPar.fsy"
                 : 'gentype_Type));
# 1790 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 "CPar.fsy"
                                                               TypF     
                   )
# 306 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1801 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 63;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
